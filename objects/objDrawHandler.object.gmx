<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(object_index) &gt; 1) {
    instance_destroy(id, false);
    exit;
}

// create px upscaler
u_texelsPerPixel = shader_get_uniform(sh_pxUpscale,"u_texelsPerPixel");
// fix upscaler on roomstart and unpause
noUpscaleTimer = 0;

active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///px upscaler
if (not active or noUpscaleTimer &gt; 0) exit;
var windowWidth = window_get_width();
var windowHeight = window_get_height();

texture_set_repeat(false);

draw_enable_alphablend(false);

if(windowWidth mod 800 != 0 || windowHeight mod 608 != 0){
    var aspectRatio = windowWidth / windowHeight;
    var aspectRatioRatio = aspectRatio / (800/608);
    
    texture_set_interpolation(true);
    shader_set(sh_pxUpscale);
    
    if(aspectRatioRatio &lt; 1){
        var canvasHeight = windowWidth*608/800;
        var vertOutPixels = (windowHeight - canvasHeight) / 2;
        shader_set_uniform_f(u_texelsPerPixel, 800./windowWidth, 608./canvasHeight);
        draw_surface_stretched(application_surface, 0, vertOutPixels, windowWidth, canvasHeight);
    }
    else{
        var canvasWidth = windowHeight*800/608;
        var horOutPixels = (windowWidth - canvasWidth) / 2;
        shader_set_uniform_f(u_texelsPerPixel, 800./canvasWidth, 608./windowHeight);
        draw_surface_stretched(application_surface, horOutPixels, 0, canvasWidth, windowHeight);
    }
    
    shader_reset();
    texture_set_interpolation(false);
}
else{
    draw_surface_stretched(application_surface,0,0,windowWidth,windowHeight);
}

draw_enable_alphablend(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Smoothing mode fix
//Draw the final application surface at the desired smoothing.
// texture_set_interpolation(global.smoothingMode);
// px upscaler
if (not active or noUpscaleTimer &lt;= 0)
    application_surface_draw_enable(false);
else if (noUpscaleTimer &gt; 0) {
    noUpscaleTimer--;
    application_surface_draw_enable(true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Smoothing mode fix
//Turn off smoothing so stretched sprites don't distort.
texture_set_interpolation(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
