<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerJump</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.2;
global.noRestart = true;
global.noPause = true;

t = 0;
start_y = y;
goal_y = 304;

loop_counter = 0;
loop_point = 2.495;
max_loops = 14;

draw_bow = global.difficulty == 0;

skip_alpha = 0;
var skip_button = input_get_key_name(
    global.controls[KEY.SKIP, 0]
);
if (global.controllerMode)
    skip_button = input_get_button_name(
        global.controls[KEY.SKIP, 0]
    );
skip_text = "Press " + skip_button + " to skip";

d_rot = 0;

// use non-included file for slightly more accurate positioning
music_play(musDucktales, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not audio_is_playing(sndExplosion)) {
    room_goto(rTwoTrees);
    global.noRestart = false;
    global.noPause = false;
}
alarm[0] = 3; // check does not need to be frequent

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y != goal_y and t &lt;= 400 and d_rot == 0) {
    y = EaseOutSine(t, y, goal_y, 400);
    t++;
}

if (input_check(KEY.SKIP) and loop_counter &lt; max_loops)
    loop_counter = max_loops;

// loop music
var track_pos = audio_sound_get_track_position(global.currentMusic);
if (track_pos &gt;= loop_point
    and loop_counter &lt; max_loops)
{
    audio_sound_set_track_position(global.currentMusic, 0);
    loop_counter++;
}

// show skip option if half-ish
if (loop_counter &gt;= 6 and loop_counter &lt; max_loops) {
    skip_alpha = min(1, skip_alpha + 0.001);
}

if (loop_counter &gt;= max_loops) {
    skip_alpha = max(0, skip_alpha - 0.05);
    // interrupt song
    if (track_pos &gt; 4.3) {
        // spawn santa's sleigh if it doesn't exist
        if (not instance_exists(objSanta)) {
            instance_create(x,y,objSanta);
        }
        else if (place_meeting(x,y,objSanta)) {
            with (instance_create(x,y,objExplosion)) {
                image_xscale = 2;
                image_yscale = 2;
            }
            music_stop();
            // fly down-right
            event_user(0);
            with (objSanta) event_user(0);
        }
    }
}

if (d_rot != 0) image_angle += d_rot;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d_rot = 10;
vspeed = 5;
hspeed = 3;
sprite_index = sprPlayerFall;
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (draw_bow) draw_sprite_ext(
    sprBow, 0, x, y, image_xscale, image_yscale,
    image_angle, image_blend, image_alpha
);

if (skip_alpha &gt; 0) {
    draw_set_font(fDefault18);
    draw_set_halign(fa_right);
    draw_set_valign(fa_top);
    draw_set_colour(c_white);
    draw_set_alpha(skip_alpha);
    draw_text(room_width - 4, 0 + 4, skip_text);
    // restore alpha
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
