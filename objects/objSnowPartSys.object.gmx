<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(object_index) &gt; 1) {
    instance_destroy(id, false);
    exit;
}

p_sys_front = part_system_create();
part_system_depth(p_sys_front, -1500000);
p_emit_front = part_emitter_create(p_sys_front);

p_sys_back = part_system_create();
part_system_depth(p_sys_back, 1500000);
p_emit_back = part_emitter_create(p_sys_back);

p_snow_front = part_type_create();
p_snow_back = part_type_create();
p_halo_back = part_type_create();
event_user(0);

t0 = 0;
t1 = 0;
t2 = 0;
f0 = max(1, 12 div (room_width / 800));
f1 = max(1, 4  div (room_width / 800));
f2 = max(1, 12 div (room_width / 800));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(p_snow_front);
part_type_destroy(p_snow_back);
part_type_destroy(p_halo_back);
part_emitter_destroy_all(p_sys_front);
part_emitter_destroy_all(p_sys_back);
part_system_destroy(p_sys_front);
part_system_destroy(p_sys_back);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// manual streaming
if (t0 &gt;= f0) {
    t0 = 0;
    part_emitter_burst(p_sys_front, p_emit_front, p_snow_front, 3);
}
if (t1 &gt;= f1) {
    t1 = 0;
    part_emitter_burst(p_sys_back, p_emit_back, p_snow_back, 3);
}
if (t2 &gt;= f2) {
    t2 = 0;
    part_emitter_burst(p_sys_back, p_emit_back, p_halo_back, 3);
}

t0++; t1++; t2++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// emitter regions and freqs
part_emitter_region(
    p_sys_front, p_emit_front,
    0-32, room_width+32, 0, 0,
    ps_shape_line, ps_distr_linear
);

part_emitter_region(
    p_sys_back, p_emit_back,
    0-32, room_width+32, 0, 0,
    ps_shape_line, ps_distr_linear
);

f0 = max(1, 12 div (room_width / 800));
f1 = max(1, 4  div (room_width / 800));
f2 = max(1, 12 div (room_width / 800));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init parts
part_type_shape         (p_snow_front, pt_shape_snow);
part_type_size          (p_snow_front, 2, 4, -0.03, 0.015);
part_type_scale         (p_snow_front, 0.2, 0.2);
part_type_colour1       (p_snow_front, c_white);
part_type_alpha2        (p_snow_front, 0.5, 0);
part_type_speed         (p_snow_front, 2, 3, 0, 0);
part_type_direction     (p_snow_front, 240, 300, 0, 0);
part_type_gravity       (p_snow_front, 0, 270);
part_type_orientation   (p_snow_front, 0, 0, 0, 0, 1);
part_type_blend         (p_snow_front, 1);
part_type_life          (p_snow_front, 300, 600);

part_type_shape         (p_snow_back, pt_shape_snow);
part_type_size          (p_snow_back, 1, 3, -0.02, 0.01);
part_type_scale         (p_snow_back, 0.2, 0.2);
part_type_colour1       (p_snow_back, c_white);
part_type_alpha2        (p_snow_back, 1, 0);
part_type_speed         (p_snow_back, 1, 2, 0, 0);
part_type_direction     (p_snow_back, 240, 300, 0, 0);
part_type_gravity       (p_snow_back, 0, 270);
part_type_orientation   (p_snow_back, 0, 0, 0, 0, 1);
part_type_blend         (p_snow_back, 1);
part_type_life          (p_snow_back, 300, 600);

part_type_shape         (p_halo_back, pt_shape_sphere);
part_type_size          (p_halo_back, 1, 3, -0.02, 0.01);
part_type_scale         (p_halo_back, 1, 1);
part_type_colour1       (p_halo_back, c_white);
part_type_alpha2        (p_halo_back, 0.25, 0);
part_type_speed         (p_halo_back, 1, 2, 0, 0);
part_type_direction     (p_halo_back, 240, 300, 0, 0);
part_type_gravity       (p_halo_back, 0, 270);
part_type_orientation   (p_halo_back, 0, 0, 0, 0, 1);
part_type_blend         (p_halo_back, 1);
part_type_life          (p_halo_back, 300, 600);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != rSample) {
    instance_destroy();
    exit;
}

// update emitters
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
